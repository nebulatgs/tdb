import{createRequire as A}from"node:module";import F from"node:path";import q from"node:url";globalThis.require=A(import.meta.url);globalThis.__filename=q.fileURLToPath(import.meta.url);globalThis.__dirname=F.dirname(__filename);import B from"chalk";import{randomInt as U}from"crypto";import D from"slip";var p=192,d=219,S=220,y=221;function K(e){let t=[p];for(let r of e)r===p?t.push(d,S):r===d?t.push(d,y):t.push(r);return t.push(p),Buffer.from(t)}function Q(e){let t=[],r=!1;for(let n of e)r?(n===S?t.push(p):n===y?t.push(d):(t.push(d),t.push(n)),r=!1):n===d?r=!0:n===p||t.push(n);return Buffer.from(t)}function L(e){let t=e[0]>>4&15,r=(e[0]&15)*4,n=e.readUInt16BE(2),f=e[9],s=e.slice(12,16).join("."),o=e.slice(16,20).join(".");return{version:t,headerLength:r,totalLength:n,protocol:f,srcIP:s,dstIP:o,payload:e.slice(r,n)}}function N(e){let t=e.readUInt16BE(0),r=e.readUInt16BE(2),n=e.readUInt32BE(4),f=e.readUInt32BE(8),s=(e[12]>>4&15)*4,o=e[13],i=e.readUInt16BE(14);return{srcPort:t,dstPort:r,seqNumber:n,ackNumber:f,headerLength:s,flags:o,windowSize:i,payload:e.slice(s)}}function T(e){let t=0;for(let r=0;r<e.length;r+=2)t+=e.readUInt16BE(r);return t=(t>>16)+(t&65535),t+=t>>16,~t&65535}function b(e,t,r){let n=Buffer.alloc(12);e.split(".").forEach((o,i)=>{n[i]=parseInt(o)}),t.split(".").forEach((o,i)=>{n[4+i]=parseInt(o)}),n[8]=0,n[9]=6,n.writeUInt16BE(r.length,10);let f=Buffer.concat([n,r]),s=0;for(let o=0;o<f.length;o+=2)o===f.length-1?s+=f[o]<<8:s+=f.readUInt16BE(o);return s=(s>>16)+(s&65535),s+=s>>16,~s&65535}function E(e,t,r,n,f,s,o){let u=20+o.length,c=Buffer.alloc(u);return c.writeUInt16BE(t,0),c.writeUInt16BE(e,2),c.writeUInt32BE(r,4),c.writeUInt32BE(n,8),c[12]=20/4<<4,c[13]=f,c.writeUInt16BE(s,14),c.writeUInt16BE(0,16),c.writeUInt16BE(0,18),o.copy(c,20),c}function I(e,t,r,n){let s=20+n.length,o=Buffer.alloc(s);o[0]=69,o[1]=0,o.writeUInt16BE(s,2),o.writeUInt16BE(U(65536),4),o.writeUInt16BE(16384,6),o[8]=64,o[9]=r,o.writeUInt16BE(0,10),e.split(".").forEach((u,c)=>{o[12+c]=parseInt(u)}),t.split(".").forEach((u,c)=>{o[16+c]=parseInt(u)});let i=T(o.slice(0,20));return o.writeUInt16BE(i,10),n.copy(o,20),o}function P(e,t){G(e);let r=K(e);t.serial_send_bytes(1,r)}async function V(e,t,r,n,f){let o=U(4294967295),i=E(r,n,o,0,2,64240,Buffer.alloc(0)),u=b(e,t,i);i.writeUInt16BE(u,16);let c=I(e,t,6,i);P(c,f);let a=await v(f,e,t,r,n,o);return[o+1,a]}function R(e){return["FIN","SYN","RST","PSH","ACK","URG","ECE","CWR"].filter((r,n)=>e>>n&1)}function X(e){let r=0+e.length,n=Buffer.alloc(r);e.copy(n,0,0,0),n[0]=0;let f=T(n);return n.writeUInt16BE(f,2),e.copy(n,0),n}function v(e,t,r,n,f,s){return new Promise((o,i)=>{let u=new D.Decoder({maxMessageSize:209715200,bufferSize:2048,onMessage:a=>{let l=L(Buffer.from(a));if(l.protocol===6){let m=N(l.payload);if(m.flags===18&&m.ackNumber===s+1){let g=E(n,f,s+1,m.seqNumber+1,16,64240,Buffer.alloc(0)),x=b(t,r,g);g.writeUInt16BE(x,16);let k=I(t,r,6,g);P(k,e),e.remove_listener("serial1-output-byte",c),o(m.seqNumber+1)}}}}),c=a=>{u.decode(Buffer.from([a]))};e.add_listener("serial1-output-byte",c),setTimeout(()=>{e.remove_listener("serial1-output-byte",c),i(new Error("Timeout waiting for SYN/ACK"))},3e4)})}async function Z(e,t,r,n,f,s,o,i){let c=E(r,n,f,s,24,64240,i),a=b(e,t,c);c.writeUInt16BE(a,16);let l=I(e,t,6,c);P(l,o)}var z=16;function j(e,t,r,n,f=64240){return E(t,e,r,n,z,f,Buffer.alloc(0))}function ee(e,t,r,n,f,s,o){let i=j(r,n,f,s,64240),u=b(e,t,i);i.writeUInt16BE(u,16);let c=I(e,t,6,i);return P(c,o),s}function w(e,t){return e.padEnd(t)}function h(e,t){return e.padStart(t)}function G(e){if(!process.env.DEBUG)return;let t=L(e),{srcIP:r,dstIP:n}=t,f=r==="10.0.0.1"?B.green(r):B.red(r),s=n==="10.0.0.1"?B.green(n):B.red(n),o=N(t.payload),{srcPort:i,dstPort:u,seqNumber:c,ackNumber:a,flags:l,windowSize:m}=o,C=`${w(f,16)} -> ${w(s,16)}`,g=`TCP ${h(i.toString(),5)} -> ${h(u.toString(),5)}`,x=`[${w(R(l).join(", "),20)}]`,k=`Seq=${h(c.toString(),10)}`,_=`Ack=${h(a.toString(),10)}`,$=`Win=${h(m.toString(),5)}`;console.log(`${C} ${g} ${x} ${k} ${_} ${$}`)}export{I as createIPPacket,E as createTCPPacket,R as decodeTCPFlags,V as establishConnection,G as logTCPIPPacket,L as parseIPPacket,N as parseTCPPacket,X as respondICMPPacket,ee as sendACK,P as sendPacketToSLIPDevice,Z as sendTCPPacket,Q as slipDecode,K as slipEncode,v as waitForSYNACK};
